plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
    id 'checkstyle'
}

group = 'davidrodriguez.com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            exclude '**/checkstyle.xml', '**/*.dtd'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

checkstyle {
    toolVersion = '10.12.3'
    config = resources.text.fromFile("src/main/java/davidrodriguez/com/uniquora/configurations/checkstyle/checkstyle.xml")
    showViolations = true
}

jacoco {
    toolVersion = "0.8.8"
    tasks.named('test') {
        useJUnitPlatform()
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test // Runs after tests
        reports {
            xml.required = true
            csv.required = false
            html.required = true
        }
        afterEvaluate {
            classDirectories.setFrom(
                    files(classDirectories.files.collect {
                        fileTree(dir: it, exclude: [
                                '**/UniquoraApplication.class' // Exclude main() from coverage
                        ])
                    })
            )
        }
    }
}